{
    // Persistent data store path. Will store holograms and app executable/runtime/log data.
    //"DataPath": "%Home%/.phoesion/glow/prism",

    // Kaleidoscope connection string. "auto" enables auto-discovery services
    //"KaleidoscopeConnectionString": "Host=auto",

    // Key generated for Prism entity to authenticate to broker (kaleidoscope).
    //"EntityAuthKey": null,

    /*
        // Load configs from Secrets Providers (eg AWS Secrets Manager, Azure, etc)
        "SecretsProvider": {
            "Provider": "AWS", // Load from AWS
            "SecretName": "my_secret" // <-- secret is a json string of the configs
        }
        */

    // Set IsEphemeral true to enable a state-less operation mode, if you don't want to have a state-full persistent volume when running in a container.
    //    In this case EntitySeed/EntityId will be generated on the fly and all files will be re-synced when service starts
    //"IsEphemeral": false

    // Web server ports
    //"HttpPort": [ 80, 16000 ],
    //"HttpsPort": [ 443, 16001 ],

    //Enable X-Forwarded-xxx headers
    //"XForwardedFor": true,
    //"XForwardedProto": true,
    //"XForwardedHost": true,

    /*
    // Forwarded headers for client ip, when prism is behind a proxy.
    "ForwardedIP_Headers": [
        "X-Real-IP",
        "True-Client-IP", // CloudFlare
        "CF-Connecting-IP" // CloudFlare
    ],
    */

    // Resolve the domain from header instead of request url. Useful when behind a reverse proxy, to specify the desired domain.
    //"ResolveDomainFromHeader": null,

    // Resolve the quantum space from header instead of domain. Useful when behind a reverse proxy, to target the desired QuantumSpace.
    //"ResolveQuantumSpaceFromHeader": null,

    // Enable or Disable response compression.
    //"ResponseCompression": true,

    /*
    // Setup response caching.
    "ResponseCaching": {
        // Enable/Disable response caching
        "IsEnabled": true,

        // The largest cache able size for the response body in bytes. The default value is 64 * 1024 * 1024 (64 MB). 
        //MaximumBodySize :  67108864,
        //The size limit for the response cache middleware in bytes. The default value is 100 * 1024 * 1024 (100 MB).
        //SizeLimit : 104857600,
    }
    */

    /*
    // SignalR Configurations
    "SignalR": {
        // Enable/Disable SignaR
        "IsEnabled": true,

        // Configurations  (https://docs.microsoft.com/en-us/aspnet/core/signalr/configuration)
        //"MaximumParallelInvocationsPerClient": 16,
        //"MaximumReceiveMessageSize": 65536, // 65536 = 64 * 1024 = 64 KB
        //"KeepAliveInterval": 15,  //in seconds
        //"HandshakeTimeout": 15,  //in seconds
        //"EnableDetailedErrors": true,
        //"Transports_WebSockets": true,
        //"Transports_LongPolling": true,
        //"Transports_ServerSentEvents": true,

        "MessagePack": {
            // Enable/Disable MessagePack protocol for SignalR
            "IsEnabled": true,
        }
    },
    */

    /*
    // Default HTML pages
    "DefaultHTML" : {
        "NotFound" : "html code here",
        "Maintenance" : "html code here",
        "ServiceUnavailable" : "html code here",
        "QuantumSpaceDisabled" : "html code here",
    }
    */

    /*
    // Simple tcp reverse proxies
    "TCP_ReverseProxies" : [
        {
            "IsEnabled" : true,  // default value : true
            "Port" : 1234,
            "Destinations" : [ "myOtherHost" , "anotherHost:5000" ],  // a destination host will be randomly selected from this list
            "MaxConcurrentConnections" : 10000, // default value : 10000
            //"AllowedIPs" : [ "10.20.30.40" ], // leave blank for all ips
            //"SSLTerminationDomain" : "myhost.myorg.com" // the domain/binding certificate to use for SSL termination on this endpoint
        }
    ]
    */

    // Configure OpenTelemetry for PRISM entity
    /*
    "OpenTelemetry" : {
        "IsEnabled" : false, // enable/disable open telemetry
	    "Meters" : [ ],      // add extra meters

        "Prometheus": {
            "IsEnabled": false,                              // enable/disable prometheus scraping endpoint
            "Endpoint": "/$glow$/open-telemetry/metrics";    // scraping endpoint path
            //"Username": "aUser"                            // add a prometheus user for Basic-Auth		
            //"Password": "aPass"                            // add a prometheus password for Basic-Auth		
            //"AllowedIp": "127.0.0.1"                       // allow only this IP to access scraping endpoint
            //"AllowedIps": [ "127.0.0.1" , "192.168.1.10" ] // allow only this IPs to access scraping endpoint
        }

        "OtlpExporter": {
            "IsEnabled": false,                              // enable/disable Otlp Exporter
            "Endpoint": null;                                // the endpoint of the Otlp exporter
            //"Protocol": "Grpc",                            // Protocol to use. Default is Grpc
            //"Headers": [],                                 // Extra headers to add
            //"TimeoutMilliseconds : 10000,                  // Timeout in milliseconds. Default is 10000
        }

        "Zipkin" :
        {
            "IsEnabled": false,                              // enable/disable Zipkin Exporter
            "Endpoint": null;                                // the endpoint of the Zipkin exporter
            //"UseShortTraceIds" : false,                    // 
		    //"MaxPayloadSizeInBytes" : 4096,                //
        }
    }
    */
}
