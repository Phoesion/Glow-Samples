@page "/callbackend"
@using api = Foompany.Services.API;

<h1>Secure backend api call</h1>

<p>This component demonstrates fetching data from the server, using the glow rest client.</p>

@if (Result == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<p>Result : @Result</p>
}

@code {
	[Inject] IGlowRestClientFactory GlowClientFactory { get; set; }
	[Inject] ILogger<CallBackend> logger { get; set; }

	private string Result { get; set; }

	protected override async Task OnInitializedAsync()
	{
		//get glow client
		using var client = GlowClientFactory.GetClient(Constants.MyServicesClient);

		//start ray logging scope (logs for this request will be visible from blaze)
		using (logger.BeginClientLoggingScope())
			try
			{
				//send request
				logger.LogInformation("Requesting..");
				var res = await client.Call(api.SampleService1.Modules.SampleModule1.Actions.DoTheThing, "some demo input").InvokeAsync();
				logger.LogInformation($"Response received, result={res}.");

				//keep result
				Result = res;
			}
			catch (Exception ex) { logger.LogError(ex, "Unhandled exception caught"); } //log exception
	}
}
