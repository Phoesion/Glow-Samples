@page "/fetchdata2"
@using Foompany.Services.Backend.API.Dto
@using Phoesion.Glow.SDK.Client.REST
@using api = Foompany.Services.Backend.API.Modules.WeatherForecast;
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server, using the glow rest client.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Inject]
    IGlowClientFactory GlowClientFactory { get; set; }

    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        //get glow client
        using var client = GlowClientFactory.GetClient(Constants.MyServicesClient);

        forecasts = await client.Call(api.GetForecast).InvokeAsync();
    }
}
